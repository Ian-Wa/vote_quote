{"ast":null,"code":"import { Quote } from '../quote';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../quote-form/quote-form.component\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../highlight.directive\";\nimport * as i4 from \"../quote-details/quote-details.component\";\n\nfunction QuoteComponent_div_11_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"app-quote-details\", 13);\n    i0.ɵɵlistener(\"isComplete\", function QuoteComponent_div_11_div_11_Template_app_quote_details_isComplete_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const i_r2 = i0.ɵɵnextContext().index;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.deleteQuote($event, i_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const quote_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"quote\", quote_r1);\n  }\n}\n\nfunction QuoteComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"div\", 8);\n    i0.ɵɵelementStart(3, \"h5\", 9);\n    i0.ɵɵtext(4, \"Quote\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4);\n    i0.ɵɵelementStart(6, \"p\", 10);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function QuoteComponent_div_11_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const i_r2 = restoredCtx.index;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.toogleDetails(i_r2);\n    });\n    i0.ɵɵtext(9, \"Details\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 4);\n    i0.ɵɵtemplate(11, QuoteComponent_div_11_div_11_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const quote_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(6);\n    i0.ɵɵpropertyInterpolate(\"id\", i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", quote_r1.description, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", quote_r1.showDescription);\n  }\n}\n\nexport let QuoteComponent = /*#__PURE__*/(() => {\n  class QuoteComponent {\n    constructor() {\n      this.quotes = [new Quote(1, 'Ian Wanjira', 'Dalai Lama', 'The purpose of our lives is to be happy.', new Date(2020, 9, 10)), new Quote(2, 'Peter Griffin', 'Steve Jobs', \"Your time is limited, so don’t waste it living someone else’s life. Don’t be trapped by dogma – which is living with the results of other people’s thinking.\", new Date(2020, 9, 10)), new Quote(3, 'Sherlock Holmes', 'Henry Ford', 'The whole secret of a successful life is to find out what is one’s destiny to do, and then do it.', new Date(2020, 9, 10))];\n    }\n\n    addNewQuote(quote) {\n      const quoteLength = this.quotes.length;\n      quote.id = quoteLength + 1;\n      quote.dateCreated = new Date();\n      this.quotes.push(quote);\n    }\n\n    deleteQuote(isComplete, index) {\n      if (isComplete) {\n        const toDelete = confirm(`Are you sure you want to delete ${this.quotes[index].name}`);\n\n        if (toDelete) {\n          this.quotes.splice(index, 1);\n        }\n      }\n    }\n\n    toogleDetails(index) {\n      this.quotes[index].showDescription = !this.quotes[index].showDescription;\n    }\n\n    completeQuote(isComplete, index) {\n      if (isComplete) {\n        this.quotes.splice(index, 1);\n      }\n    }\n\n    ngOnInit() {}\n\n  }\n\n  QuoteComponent.ɵfac = function QuoteComponent_Factory(t) {\n    return new (t || QuoteComponent)();\n  };\n\n  QuoteComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuoteComponent,\n    selectors: [[\"app-quote\"]],\n    decls: 12,\n    vars: 1,\n    consts: [[1, \"text-center\"], [1, \"container\", \"jumbotron\", \"bgm\"], [1, \"row\"], [1, \"col-md-6\"], [1, \"container\"], [3, \"addQuote\"], [\"class\", \"row\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\", \"text-white\", \"bg-primary\", \"mb-3\", 2, \"max-width\", \"18rem\"], [1, \"card-body\"], [1, \"card-title\"], [\"appHighlight\", \"\", 3, \"id\"], [1, \"btn\", \"btn-success\", 3, \"click\"], [\"class\", \"row\", 4, \"ngIf\"], [3, \"quote\", \"isComplete\"]],\n    template: function QuoteComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\", 0);\n        i0.ɵɵtext(1, \"QUOTES \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵelementStart(8, \"app-quote-form\", 5);\n        i0.ɵɵlistener(\"addQuote\", function QuoteComponent_Template_app_quote_form_addQuote_8_listener($event) {\n          return ctx.addNewQuote($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 3);\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵtemplate(11, QuoteComponent_div_11_Template, 12, 3, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.quotes);\n      }\n    },\n    directives: [i1.QuoteFormComponent, i2.NgForOf, i3.HighlightDirective, i2.NgIf, i4.QuoteDetailsComponent],\n    styles: [\".bgm[_ngcontent-%COMP%]{background-color:orange}\"]\n  });\n  return QuoteComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}